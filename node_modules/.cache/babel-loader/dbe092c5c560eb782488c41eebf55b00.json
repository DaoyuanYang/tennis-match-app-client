{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dominicy/ANU/Coding/React/my-first-app/client/src/routers/login.js\";\nimport React, { useState } from 'react';\n\nconst axios = require('axios'); // config serverUrl\n\n\nconst apiUrl = require('../config/keys').serverUrl.concat('/login');\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getAllUsers = this.getAllUsers.bind(this);\n    this.state = {\n      users: 'all users data should go here',\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    const users = this.getAllUsers();\n\n    if (!users) {\n      throw new Error('no users fetched');\n    }\n\n    this.setState({\n      users: users,\n      isLoaded: true\n    });\n  }\n\n  getAllUsers() {\n    axios.get(apiUrl).then(users => {\n      console.log('users');\n\n      if (!users) {\n        throw new Error('Cannot get users');\n      }\n\n      return users;\n    }).catch(e => {\n      console.log('error');\n      console.log(e);\n    });\n  }\n\n  render() {\n    var data = this.state.users || 'initial data';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getAllUsers(),\n        children: \"Clickme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/dominicy/ANU/Coding/React/my-first-app/client/src/routers/login.js"],"names":["React","useState","axios","require","apiUrl","serverUrl","concat","Login","Component","constructor","props","getAllUsers","bind","state","users","isLoaded","componentDidMount","Error","setState","get","then","console","log","catch","e","render","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BE,SAA1B,CAAoCC,MAApC,CAA2C,QAA3C,CAAf;;AAIA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,+BADC;AAETC,MAAAA,QAAQ,EAAG;AAFF,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,UAAMF,KAAK,GAAG,KAAKH,WAAL,EAAd;;AACA,QAAI,CAACG,KAAL,EAAY;AACR,YAAM,IAAIG,KAAJ,CAAU,kBAAV,CAAN;AACH;;AACD,SAAKC,QAAL,CAAc;AACVJ,MAAAA,KAAK,EAAGA,KADE;AAEVC,MAAAA,QAAQ,EAAG;AAFD,KAAd;AAIH;;AAEDJ,EAAAA,WAAW,GAAE;AACTT,IAAAA,KAAK,CAACiB,GAAN,CAAUf,MAAV,EACCgB,IADD,CACQN,KAAD,IAAU;AACbO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAI,CAACR,KAAL,EAAY;AACR,cAAM,IAAIG,KAAJ,CAAU,kBAAV,CAAN;AACH;;AACD,aAAOH,KAAP;AACH,KAPD,EAQCS,KARD,CAQQC,CAAD,IAAO;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,KAXD;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,KAAKb,KAAL,CAAWC,KAAX,IAAoB,cAA/B;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIY;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKf,WAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA7C+B;;AAiDpC,eAAeJ,KAAf","sourcesContent":["import React, {useState} from 'react'\nconst axios = require('axios')\n\n// config serverUrl\nconst apiUrl = require('../config/keys').serverUrl.concat('/login')\n\n\n\nclass Login extends React.Component {\n    constructor (props) {\n        super(props)\n        this.getAllUsers = this.getAllUsers.bind(this)\n        this.state = {\n            users : 'all users data should go here',\n            isLoaded : false\n        }\n    }\n\n    componentDidMount(){\n        const users = this.getAllUsers() \n        if (!users) {\n            throw new Error('no users fetched')\n        }\n        this.setState({\n            users : users,\n            isLoaded : true\n        })\n    }\n\n    getAllUsers(){\n        axios.get(apiUrl)\n        .then ((users) =>{\n            console.log('users')\n            if (!users) {\n                throw new Error('Cannot get users')\n            }\n            return users\n        })\n        .catch((e) => {\n            console.log('error')\n            console.log(e)\n        }) \n    }\n\n    render() {\n        var data = this.state.users || 'initial data'\n        return (\n            <div>\n                <h1>Login</h1>\n                <p>{data}</p>\n                <button onClick={this.getAllUsers()}>Clickme</button>\n            </div>\n        )\n    }\n    \n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}